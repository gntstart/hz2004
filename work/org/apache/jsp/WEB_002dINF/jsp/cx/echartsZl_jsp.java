/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2020-10-12 02:33:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.cx;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.hzjc.hz2004.base.login.LoginFilter;
import java.util.*;
import java.net.*;
import com.hzjc.hz2004.base.*;
import com.hzjc.hz2004.util.*;
import com.hzjc.hz2004.base.login.*;
import com.hzjc.util.*;
import com.hzjc.hz2004.po.PoXT_YHSJFWB;
import com.hzjc.hz2004.po.PoPERSON_DY_SET;
import com.hzjc.hz2004.po.PoXT_XTGNB;

public final class echartsZl_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp/cx/../config.jsp", Long.valueOf(1602465772454L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.hzjc.hz2004.base");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.hzjc.hz2004.base.login");
    _jspx_imports_packages.add("com.hzjc.hz2004.util");
    _jspx_imports_packages.add("com.hzjc.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.hzjc.hz2004.po.PoXT_YHSJFWB");
    _jspx_imports_classes.add("com.hzjc.hz2004.po.PoXT_XTGNB");
    _jspx_imports_classes.add("com.hzjc.hz2004.po.PoPERSON_DY_SET");
    _jspx_imports_classes.add("com.hzjc.hz2004.base.login.LoginFilter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	String path = request.getContextPath();
	String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+ path+"/";
	String sysDate = StringUtils.getServiceDate();
	String dkqlx = "2";//è¯»å¡å¨é»è®¤ä¸º2 åè§
	int ryxxsdFlag = 0;
	int ryxxjsFlag = 0;
	AuthToken authToken = BaseContext.getUser();
	if(authToken!=null){
		PoPERSON_DY_SET poPERSON_DY_SET = authToken.getPersonDySet();
		if(poPERSON_DY_SET!=null){
			dkqlx = poPERSON_DY_SET.getDkqlx();
		}
		if(authToken.isAdmin()){
			ryxxsdFlag = 1;
			ryxxjsFlag = 1;
		}else{
			List<PoXT_XTGNB>  xtgnb = authToken.getXtgn();
			for(PoXT_XTGNB gn:xtgnb){
				if(gn.getGnbh().equals("F0000")){//äººåä¿¡æ¯éå®
					ryxxsdFlag = 1;
				}else if(gn.getGnbh().equals("F0001")){//äººåä¿¡æ¯è§£é
					ryxxjsFlag = 1;
				}
			}
		}
	}
	response.setHeader("Cache-Control","no-store");  
	response.setHeader("Pragrma","no-cache");  
	response.setDateHeader("Expires",0); 

      out.write("<Script Lanaguage=\"JavaScript\">\r\n");
      out.write("\tvar xmdz = '");
      out.print(basePath);
      out.write("';\r\n");
      out.write("\tvar sysDate = '");
      out.print(sysDate);
      out.write("';\r\n");
      out.write("\t/** \r\n");
      out.write("\t\t2018.10.25\r\n");
      out.write("\t\tÃ¦ÂÂ°Ã¥Â¢Â\tÃ¥ÂÂÃ¦ÂÂ°\r\n");
      out.write("\t\tÃ¨Â¿ÂÃ¥ÂÂºÃ¥ÂÂ°Ã§ÂÂÃ¥Â¸ÂÃ¥ÂÂ¿Ã¥ÂÂº - Ã¥Â®ÂÃ¥Â¾Â½Ã§ÂÂ\r\n");
      out.write("\t\tÃ¨Â¿ÂÃ¥ÂÂ¥Ã¤Â¸ÂÃ¥ÂÂ¡/Ã¨Â¿ÂÃ¥ÂÂ¥Ã¥Â®Â¡Ã¦ÂÂ¹Ã¤Â½Â¿Ã§ÂÂ¨\r\n");
      out.write("\t*/\r\n");
      out.write("\tvar sysQcdq = \"34\";\r\n");
      out.write("\tvar dkqlx = '");
      out.print(dkqlx);
      out.write("';\r\n");
      out.write("\tvar ryxxsdFlag = '");
      out.print(ryxxsdFlag);
      out.write("';\r\n");
      out.write("\tvar ryxxjsFlag = '");
      out.print(ryxxjsFlag);
      out.write("';\r\n");
      out.write("\tvar baseurl = '");
      out.print(basePath);
      out.write("';\r\n");
      out.write("\tfunction forbidBackSpace(e) {\r\n");
      out.write("\t\t   var ev = e || window.event; //è·åeventå¯¹è±¡ \r\n");
      out.write("\t\t   var obj = ev.target || ev.srcElement; //è·åäºä»¶æº \r\n");
      out.write("\t\t   var t = obj.type || obj.getAttribute('type'); //è·åäºä»¶æºç±»å \r\n");
      out.write("\t\t   //è·åä½ä¸ºå¤æ­æ¡ä»¶çäºä»¶ç±»å \r\n");
      out.write("\t\t   var vReadOnly = obj.readOnly;\r\n");
      out.write("\t\t   var vDisabled = obj.disabled;\r\n");
      out.write("\t\t   //å¤çundefinedå¼æåµ \r\n");
      out.write("\t\t   vReadOnly = (vReadOnly == undefined) ? false : vReadOnly;\r\n");
      out.write("\t\t   vDisabled = (vDisabled == undefined) ? true : vDisabled;\r\n");
      out.write("\t\t   //å½æ²Backspaceé®æ¶ï¼äºä»¶æºç±»åä¸ºå¯ç æåè¡ãå¤è¡ææ¬çï¼ \r\n");
      out.write("\t\t   //å¹¶ä¸readOnlyå±æ§ä¸ºtrueædisabledå±æ§ä¸ºtrueçï¼åéæ ¼é®å¤±æ \r\n");
      out.write("\t\t   var flag1 = ev.keyCode == 8 && (t == \"password\" || t == \"text\" || t == \"textarea\") && (vReadOnly == true || vDisabled == true);\r\n");
      out.write("\t\t   //å½æ²Backspaceé®æ¶ï¼äºä»¶æºç±»åéå¯ç æåè¡ãå¤è¡ææ¬çï¼åéæ ¼é®å¤±æ \r\n");
      out.write("\t\t   var flag2 = ev.keyCode == 8 && t != \"password\" && t != \"text\" && t != \"textarea\";\r\n");
      out.write("\t\t   //å¤æ­ \r\n");
      out.write("\t\t   if (flag2 || flag1) return false;\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t//ç¦æ­¢åéé® ä½ç¨äºFirefoxãOpera\r\n");
      out.write("\t\tdocument.onkeypress = forbidBackSpace;\r\n");
      out.write("\t\t//ç¦æ­¢åéé®  ä½ç¨äºIEãChrome\r\n");
      out.write("\t\tdocument.onkeydown = forbidBackSpace;\r\n");
      out.write("\t \r\n");
      out.write("</Script>");

	AuthToken u = BaseContext.getUser();
	response.setHeader("Cache-Control","no-store");  
	response.setHeader("Pragrma","no-cache");  
	response.setDateHeader("Expires",0); 

      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("\t\t<base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("    \t<title>人口总览</title>\r\n");
      out.write("\t\t<style type=\"text/css\">\r\n");
      out.write("\t\t\t#main {\r\n");
      out.write("\t\t\t    /* border:1px solid #D3D3D3; */\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#header {\r\n");
      out.write("\t\t\t    color:white;\r\n");
      out.write("\t\t\t    text-align:center;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#nav {\r\n");
      out.write("\t\t\t    line-height:30px;\r\n");
      out.write("\t\t\t    height:500px;\r\n");
      out.write("\t\t\t    width:30%;\r\n");
      out.write("\t\t\t    float:left;\r\n");
      out.write("\t\t\t    padding:5px; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#section {\r\n");
      out.write("\t\t\t    width:68%;\r\n");
      out.write("\t\t\t    float:right;\r\n");
      out.write("\t\t\t    padding:5px; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#section div{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tpadding:1px;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#section div h4{\r\n");
      out.write("\t\t\t\tpadding:1px;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t#section div a{\r\n");
      out.write("\t\t\t\twidth:35%;\r\n");
      out.write("\t\t\t\tcolor:white;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.southPart {\r\n");
      out.write("\t\t\t/* height: 1000px; */\r\n");
      out.write("\t\t\twidth: 100%;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.right{\r\n");
      out.write("\t\t\tfloat:right; \r\n");
      out.write("\t\t\twidth:45%; \r\n");
      out.write("\t\t\theight:200px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.mid{\r\n");
      out.write("\t\t\tfloat:right;\r\n");
      out.write("\t\t\twidth:200px; \r\n");
      out.write("\t\t\theight:200px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.left{\r\n");
      out.write("\t\t\tfloat:left; \r\n");
      out.write("\t\t\twidth:45%; \r\n");
      out.write("\t\t\theight:200px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t#footer {\r\n");
      out.write("\t\t\t    background-color:black;\r\n");
      out.write("\t\t\t    color:white;\r\n");
      out.write("\t\t\t    clear:both;\r\n");
      out.write("\t\t\t    text-align:center;\r\n");
      out.write("\t\t\t    padding:5px; \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.div-empty{ border:1px solid #333333;width:100%; height:200px}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=EmulateIE8\" />\r\n");
      out.write("\t\t<meta HTTP-EQUIV=\"pragma\" CONTENT=\"no-cache\">\r\n");
      out.write(" \t\t<meta HTTP-EQUIV=\"Cache-Control\" CONTENT=\"no-cache, must-revalidate\">\r\n");
      out.write(" \t\t<meta HTTP-EQUIV=\"expires\" CONTENT=\"0\">\t\r\n");
      out.write("  </head>\r\n");
      out.write("  <body  style=\"background-color:#333333\">\r\n");
      out.write("  <div id=\"main\">\r\n");
      out.write("   \t<div id=\"header\">\r\n");
      out.write("\t<h2 id=\"biaoti\"></h2>\r\n");
      out.write("\t</div>\r\n");
      out.write("   \t<div id=\"nav\">\r\n");
      out.write("\t\t<div id=\"chart_panel1\" style=\"width:350px;height:500px\"></div>\r\n");
      out.write("\t\t<div id=\"chart_panel8\" style=\"width:350px;height:200px\"></div>\r\n");
      out.write("\t\t<div id='chart_panel3' style=\"width:350px;height:200px\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"section\">\r\n");
      out.write("\t\t<div><h4>人口总览</h4></div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div>总人口数：<a id='zrks'>0</a>总流入数：<a id='zlrs'>0</a><br>\r\n");
      out.write("\t\t总户数：<a id='zhs'>0</a>总流出数：<a id='zlcs'>0</a></div>\r\n");
      out.write("\t\t<div class='div-empty'/>\r\n");
      out.write("\t\t<div class='left' id=\"chart_panel2\" style=\"width:45%;height:200px;padding:5px;\"></div>\r\n");
      out.write("\t\t<div class=\"right\"id=\"chart_panel6\" style=\"width:45%;height:200px;padding:5px;\"></div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class='southPart' >\r\n");
      out.write("\t\t\t<div id=\"chart_panel9\" style=\"width:100%;height:200px\"></div>\r\n");
      out.write("\t\t\t<div id='chart_panel7' style=\"width:100%;height:200px\"></div>\r\n");
      out.write("\t\t\t<div id=\"chart_panel4\" style=\"width:100%;height:200px\"></div>\r\n");
      out.write("\t\t\t<div id='chart_panel5' style=\"width:100%;height:200px;\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>   \r\n");
      out.write("  </div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\tvar user = {\r\n");
      out.write("\t   \t\t\t\tusercode:'");
      out.print(u.getUser().getYhdlm());
      out.write("',\r\n");
      out.write("\t   \t\t\t\tdqbm:'");
      out.print(u.getUser().getDqbm());
      out.write("'\r\n");
      out.write("\t   \t\t\t};\r\n");
      out.write("\t</script>\r\n");
      out.write("   \t<script type=\"text/javascript\" src=\"js/ext/ext.js?v=");
      out.print(Math.random());
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/commFrames.js?v=");
      out.print(Math.random());
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/jquery-1.7.2-min.js?v=");
      out.print(Math.random());
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"js/echarts/echarts.js?v=");
      out.print(Math.random());
      out.write("\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"static/cx/echartsZl.js?v=");
      out.print(Math.random());
      out.write("\"></script>\r\n");
      out.write("\t<!-- <script type=\"text/javascript\" src=\"../js/dark.js?v=");
      out.print(Math.random());
      out.write("\" charset=\"utf-8\"></script> -->\r\n");
      out.write("   </body>\r\n");
      out.write("  \r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
