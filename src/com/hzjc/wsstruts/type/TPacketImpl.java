/* Generated by Together */

package com.hzjc.wsstruts.type;

import org.dom4j.*;
import org.dom4j.io.*;
import org.dom4j.util.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.*;
import com.hzjc.wsstruts.exception.*;
import com.hzjc.wsstruts.vo.*;

/**
 *
 * <p>Title: Hz2004</p>
 * <p>Description: 常住人口二代证Hz2004版</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: HZJC</p>
 * @author Kansan Ku(kgb_hz@126.com)
 * @version 1.0
 */
public class TPacketImpl
    extends TBasePacket {
  //��־����

  private TRequest _request;
  private TResponse _response;

  public TRequest getRequest() {
    return _request;
  }

  public void setRequest(TRequest request) {
    this._request = request;
  }

  public TResponse getResponse() {
    return _response;
  }

  public void setResponse(TResponse response) {
    this._response = response;
  }

  /**
   *
   */
  public TPacketImpl() {
    this(new TRequestImpl(), new TResponseImpl());
  }

  /**
   *
   * @param request
   * @param response
   */
  public TPacketImpl(TRequest request, TResponse response) {
    setRequest(request);
    setResponse(response);
  }

  //=================��������=========================================
  /**
   *
   * @param aXmlData
   * @return
   */
  public TRequest loadFromXml(String aXmlData) throws ActionException {
    try {
      return _request.loadFromXml(aXmlData);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @return
   */
  public String saveToXml() throws ActionException {
    return _response.saveToXml();
  }

  public String getVer() {
    return _request.getVer();
  }

  public void setVer(String ver) {
    _response.setVer(ver);
  }

  public String getDatetime() {
    return _request.getDatetime();
  }

  public void setDatetime(String datetime) {
    _response.setDatetime(datetime);
  }

  public String getAction() {
    return _request.getAction();
  }

  public void setAction(String action) {
    _response.setAction(action);
  }

  public String getCode() {
    return _request.getCode();
  }

  public void setCode(String code) {
    _response.setCode(code);
  }

  public String getAuthinfo() {
    return _request.getAuthinfo();
  }

  public void setAuthinfo(String authinfo) {
    _response.setAuthinfo(authinfo);
  }

  public Element getVardata() {
    return _request.getVardata();
  }

  public void setVardata(Element vardata) {
    _response.setVardata(vardata);
  }

  public Element getRsdata() {
    return _request.getRsdata();
  }

  public void setRsdata(Element rsdata) {
    _response.setRsdata(rsdata);
  }

  /**
   *
   * @param name
   * @param value
   */
  public void writeToHeadNode(String name, String value) throws ActionException {
    try {
      _response.writeToHeadNode(name, value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param value
   */
  public void writeToHeadNode(Element value) throws ActionException {
    try {
      _response.writeToHeadNode(value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public void writeToControlNode(String name, String value) throws
      ActionException {
    try {
      _response.writeToControlNode(name, value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param value
   */
  public void writeToControlNode(Element value) throws ActionException {
    try {
      _response.writeToControlNode(value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public String readFromHeadNodeAsStr(String name) throws ActionException {
    try {
      return _request.readFromHeadNodeAsStr(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public Element readFromHeadNodeAsElement(String name) throws ActionException {
    try {
      return _request.readFromHeadNodeAsElement(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public Element readFromContorlNodeAsElement(String name) throws
      ActionException {
    try {
      return _request.readFromContorlNodeAsElement(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public String readFromContorlNodeAsStr(String name) throws ActionException {
    try {
      return _request.readFromContorlNodeAsStr(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param value
   */
  public void writeToDataNode(Element value) throws ActionException {
    try {
      _response.writeToDataNode(value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public Element readFromDataNodeAsElement(String name) throws ActionException {
    try {
      return _request.readFromDataNodeAsElement(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param value
   */
  public void writeToVarData(Element value) throws ActionException {
    try {
      _response.writeToVarData(value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public void writeToVarData(String name, String value) throws ActionException {
    try {
      _response.writeToVarData(name, value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public String readFromVarDataAsStr(String name) throws ActionException {
    try {
      return _request.readFromVarDataAsStr(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public Element readFromVarDataAsElement(String name) throws ActionException {
    try {
      return _request.readFromVarDataAsElement(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public void writeToRsData(String name, String value) throws ActionException {
    try {
      _response.writeToRsData(name, value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param value
   */
  public String readFromRsDataAsStr(String name) throws ActionException {
    try {
      return _request.readFromRsDataAsStr(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @return
   */
  public List readFromRsDataAsListVO(String name) throws ActionException {
    try {
      return _request.readFromRsDataAsListVO(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @return
   */
  public PackXQL readFromVarDataAsXQL(String strXqlName) throws ActionException {
    try {
      return _request.readFromVarDataAsXQL(strXqlName);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param objarray
   */
  public void writeToRsData(String name, Object[] objarray) throws
      ActionException {
    try {
      _response.writeToRsData(name, objarray);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @return
   * @throws ActionException
   */
  public CdsVO[] readFromRsDataAsArrayVO(String name) throws ActionException {
    try {
      return _request.readFromRsDataAsArrayVO(name);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param strName
   * @param listObj
   * @throws ActionException
   */
  public void writeToRsData(String strName, List listObj) throws
      ActionException {
    try {
      _response.writeToRsData(strName, listObj);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param strName
   * @param obj
   * @throws ActionException
   */
  public void writeToRsData(String strName, Object obj) throws ActionException {
    try {
      _response.writeToRsData(strName, obj);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param strName
   * @param tyleClazz
   * @throws ActionException
   */
  public void writeToRsData(String strName, Class typeClazz) throws
      ActionException {
    try {
      _response.writeToRsData(strName, typeClazz);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param voResult
   * @throws ActionException
   */
  public void writeToRsData(String name, VoQueryResult voResult) throws
      ActionException {
    try {
      _response.writeToRsData(name, voResult);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param recordcount
   * @param objarray
   * @param typeClazz
   * @throws ActionException
   */
  public void writeToRsData(String name, Long recordcount, Object[] objarray,
                            Class typeClazz) throws ActionException {
    try {
      _response.writeToRsData(name, recordcount, objarray, typeClazz);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @return
   * @throws ActionException
   */
  public VarVO readFromVarDataAsVarVO() throws ActionException {
    try {
      return _request.readFromVarDataAsVarVO();
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @return
   * @throws ActionException
   */
  public String reqSaveToXml() throws ActionException {
    try {
      return _request.reqSaveToXml();
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @param name
   * @param recordcount
   * @param value
   * @throws ActionException
   */
  public void writeToRsData(String name, Long recordcount, String value) throws
      ActionException {
    try {
      _response.writeToRsData(name, recordcount, value);
    }
    catch (ActionException ex) {
      throw ex;
    }
  }

  /**
   *
   * @return
   */
  public Element getPackData() {
    return _request.getPackData();
  }

  /**
   *
   * @return
   */
  public String getClientip() {
    return _request.getClientip();
  }

  /**
   *
   * @param strClientIp
   */
  public void setClientip(String strClientIp) {
    _request.setClientip(strClientIp);
  }

  //==============================================================

}
