/* Generated by Together */

package com.hzjc.wsstruts.type;

/**
 * 标签定义类
 * <p>Title: Hz2004</p>
 * <p>Description: 常住人口二代证Hz2004版</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: HZJC</p>
 * @author Kansan Ku(kgb_hz@126.com)
 * @version 1.0
 * @History
 */
public class PacketTag {
  private PacketTag() {

  }

  //////////////////////////////////////////////////////////////////
  //传过来SOAP通讯包Packet中XML的标识Tag-Name
  //////////////////////////////////////////////////////////////////
  //{通信包TAG}
  public final static String PACKET_TAG_PACKET = "packet";
  //{包头TAG}
  public final static String PACKET_TAG_PACKHEAD = "packhead";
  public final static String PACKET_TAG_VER = "ver";
  public final static String PACKET_TAG_DATETIME = "datetime";
  public final static String PACKET_TAG_CLIENTIP = "clientip";
  public final static String PACKET_TAG_ISENCODE = "isencode";
  //{包控制TAG}
  public final static String PACKET_TAG_CONTROL = "control";
  public final static String PACKET_TAG_ACTION = "action";
  public final static String PACKET_TAG_CODE = "code";
  public final static String PACKET_TAG_AUTHINFO = "authinfo";
  public final static String PACKET_TAG_DESC = "desc";
  //{包体数据TAG}
  public final static String PACKET_TAG_DATA = "data";
  public final static String PACKET_TAG_VARDATA = "vardata";
  public final static String PACKET_TAG_RSDATA = "rsdata";
  public final static String PACKET_TAG_RS = "rs";
  public final static String PACKET_TAG_RSNAME = "name";
  public final static String PACKET_TAG_RECORDCOUNT = "recordcount";
  public final static String PACKET_TAG_VARDATA_VARERR = "errdesc";
  //{ACTION请求参数}
  public final static String PACKET_HTTP_REQUEST = "request";
  public final static String PACKET_HTTP_RESPONSE = "response";
  //{包成功、失败返回参数}
  public final static String PACKET_ERRCODE_PREFIX = "-9";
  public final static String PACKET_SUCCESSCODE_PREFIX = "9";
  public final static String PACKET_SUCESSCODE = "999";
  //{}

  //////////////////////////////////////////////////////////////////////
  //PackXQL查询语句定义的标签
  ///////////////////////////////////////////////////////////////////////
  public static final String XQL_TAG_XQL_CRITERION = "xql-criterion";
  public static final String XQL_TAG_SQL = "xql-sql";
  public static final String XQL_TAG_XQL_PAGE = "xql-page";
  public static final String XQL_TAG_PAGEOFFSET = "pageoffset";
  public static final String XQL_TAG_PAGESIZE = "pagesize";
  public static final String XQL_TAG_RECORDCOUNT = "recordcount";
  public static final String XQL_TAG_XQL_ORDER = "xql-order";
  public static final String XQL_TAG_XQL_GROUP = "xql-group";
  public static final String XQL_TAG_XQL_HAVING = "xql-having";
  public static final String XQL_TAG_SEQUENCE = "sequence";
  public static final String XQL_TAG_XQL_EXPRESSION = "xql-expression";
  public static final String XQL_TAG_XQL_CLAUSE = "xql-clause";
  public static final String XQL_TAG_LOGICBEHAVIOR = "logicbehavior";
  public static final String XQL_TAG_LOGICEXPRESSION = "logicexpression";
  public static final String XQL_TAG_ITEM = "item";
  public static final String XQL_TAG_REF = "ref";
  public static final String XQL_TAG_VALUE = "value";
  public static final String XQL_TAG_POID = "poid";
  public static final String XQL_TAG_ATTRIBUTE = "attribute";
  //{查询的逻辑表达行为}
  //AND: and OR : or NOT : not NULL :
  public static final String XQL_LOGICBEHAVIOR_AND = "AND";
  public static final String XQL_LOGICBEHAVIOR_OR = "OR";
  public static final String XQL_LOGICBEHAVIOR_NOT = "NOT";
  public static final String XQL_LOGICBEHAVIOR_NULL = "NULL";

  /*
   EQ: =
   NOTEQ： <>　
   LT: <
   LE: <=
   ISNOTNULL: is not null
   ISNULL: is null
   IN: in
   BETWEEN: between
   GE: >=
   GT: >
   LIKE: like '%%'
   LLIKE: like '%aa'
   RLIKE: like 'aa%'
   ILIKE : like ''
   */
  //{语句的逻辑表达关系式}
  public static final String XQL_LOGICEXPRESSION_EQ = "EQ";
  public static final String XQL_LOGICEXPRESSION_NOTEQ = "NOTEQ";
  public static final String XQL_LOGICEXPRESSION_LT = "LT";
  public static final String XQL_LOGICEXPRESSION_LE = "LE";
  public static final String XQL_LOGICEXPRESSION_ISNOTNULL = "ISNOTNULL";
  public static final String XQL_LOGICEXPRESSION_ISNULL = "ISNULL";
  public static final String XQL_LOGICEXPRESSION_IN = "IN";
  public static final String XQL_LOGICEXPRESSION_BETWEEN = "BETWEEN";
  public static final String XQL_LOGICEXPRESSION_GE = "GE";
  public static final String XQL_LOGICEXPRESSION_GT = "GT";
  public static final String XQL_LOGICEXPRESSION_LIKE = "LIKE";
  public static final String XQL_LOGICEXPRESSION_LLIKE = "LLIKE";
  public static final String XQL_LOGICEXPRESSION_RLIKE = "RLIKE";
//public static final String XQL_LOGICEXPRESSION_ILIKE = "ILIKE";

}
