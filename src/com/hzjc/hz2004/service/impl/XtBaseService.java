/* Generated by Together */

package com.hzjc.hz2004.service.impl;

import java.util.*;

import org.springframework.stereotype.Service;

import com.hzjc.hz2004.dao.*;
import com.hzjc.hz2004.po.*;
import com.hzjc.hz2004.service.*;
import com.hzjc.hz2004.constant.*;
import com.hzjc.hz2004.vo.*;
import com.hzjc.wsstruts.exception.*;
import com.hzjc.wsstruts.type.*;
import com.hzjc.wsstruts.vo.*;
import java.lang.reflect.*;
import com.hzjc.hz2004.base.login.AuthToken;
import com.hzjc.util.StringUtils;
import com.hzjc.hz2004.appbase.*;

/**
 *
 * <p>Title: Hz2004</p>
 * <p>Description: 常住人口管理系统Hz2004版</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: 浙江金铖华元新技术有限公司</p>
 * @author kgb_hz@126.com,kgb@primetech.com.cn
 * @version 1.0
 */
@Service
public class XtBaseService extends Hz2004BaseService {
  /**
   *  判断用户是否有角色是超级用户
   * @param sYHid
   * @return
   * @throws ServiceException
   * @throws DAOException
   */
  public boolean VerifyYH(String sYHid) throws ServiceException,
      DAOException {
    boolean bCjyh = false;
    List lstXtyhjs = null;
    StringBuffer strBufHql1 = new StringBuffer();
    strBufHql1.append(
        " select XT_YHJSXXB from PoXT_YHJSXXB as XT_YHJSXXB,PoXT_JSXXB as XT_JSXXB")
        .append(" where XT_YHJSXXB.jsid =XT_JSXXB.jsid and XT_JSXXB.jsmc = '")
        .append(PublicConstant.XT_CJYHMC).append("'")
        .append(" and XT_YHJSXXB.yhid = ").append(String.valueOf(getUser().getYhid()));
    try {
      PojoInfo Xt_yhjsxxbDao = DAOFactory.createXT_YHJSXXBDAO();
      lstXtyhjs = super.findAllByHQL(strBufHql1.toString());
      if (lstXtyhjs != null && !lstXtyhjs.isEmpty()) {
        bCjyh = true;
      }
    }
    catch (DAOException ex) {
      throw ex;
    }
    catch (ServiceException ex) {
      throw ex;
    }
    catch (Exception ex) {
      throw new ServiceException(WSErrCode.ERR_SERVICE_OTHER, ex);
    }
    return bCjyh;
  }

  /**
   *  获取用户单位信息
   * @param sYHid1
   * @param sYHid2
   * @return
   * @throws ServiceException
   * @throws DAOException
   */
  public String GetYHDwdm(String sYhid) throws ServiceException,
      DAOException {
    String sDwdm = "";
    PoXT_YHXXB poXT_YHXXB = null;
    Object[] objXtRtn = null;

    List lstXtDwdm = null;
    StringBuffer strBufHql1 = new StringBuffer();
    strBufHql1.append(" select XT_YHXXB from PoXT_YHXXB as XT_YHXXB where ")
        .append("  XT_YHXXB.yhid = ").append(sYhid);
    try {
      PojoInfo Xt_yhxxbDao = DAOFactory.createXT_YHXXBDAO();
      lstXtDwdm = super.findAllByHQL(strBufHql1.toString());
      if (lstXtDwdm != null && !lstXtDwdm.isEmpty()) {
        poXT_YHXXB = (PoXT_YHXXB) lstXtDwdm.get(0);
        sDwdm = poXT_YHXXB.getDwdm();
      }
    }
    catch (DAOException ex) {
      throw ex;
    }
    catch (ServiceException ex) {
      throw ex;
    }
    catch (Exception ex) {
      throw new ServiceException(WSErrCode.ERR_SERVICE_OTHER, ex);
    }

    return sDwdm;
  }

  public boolean VerifyYhsjfw(String spYhid, String spXqlx, String spSjfw) throws
      ServiceException,
      DAOException {
    boolean bFlag = false;
    List lstSjfw = new ArrayList();
    List lstSjfwP = null;
    VoXtsjfw voXt = null;

    String sParamSjfwbz = "", sParamSjfw = "";
    String sSjfwbz = "", sSjfw = "";
    StringBuffer strBufHql = new StringBuffer();
    List lstXtjwh;
    try {
      XtywqxServiceImpl.getYhsjfw(spYhid, spXqlx, lstSjfw);
      lstSjfwP = XtywqxServiceImpl.TransDataRange(spSjfw);
      //lstXt为空则业务不限制
      if (lstSjfw == null) {
        return false;
      }
      // for (int i = 0; i < lstSjfw.size(); i++) { //数据范围可能有多个
      sParamSjfwbz = (String) lstSjfwP.get(0);
      sParamSjfw = (String) lstSjfwP.get(1);
      bFlag = false;
      for (int j = 0; j < lstSjfw.size(); j++) {
        voXt = (VoXtsjfw) lstSjfw.get(j);
        sSjfwbz = voXt.getSjfwbz();
        sSjfw = voXt.getSjfw().trim();
        /**
         *如果sParamSjfw的长度小于sSjfw，也就是输入的数据范围的级别大于可用的
         * 数据范围，则返回false,无此数据范围权限
         */
        if (sParamSjfw.length() >= sSjfw.length()) {
          if (sParamSjfw.substring(0, sSjfw.length()).equals(sSjfw)) {
            bFlag = true;
            break;
          }
        }
        /**
         * 如果sparamSjfw 的长度是 12,而sSjfw的长度是9(单位) ,
         * 则要查询单位的居委会信息
         */
        if (sParamSjfw.length() == 12 && sSjfw.length() == 9) {
          strBufHql.setLength(0);
          strBufHql.append(
              " select XT_JWHXXB from PoXT_JWHXXB as XT_JWHXXB where XT_JWHXXB.dwdm ='")
              .append(sSjfw).append("'")
              .append(" and XT_JWHXXB.dm = '").append(sParamSjfw).append("'");
          //XT_JWHXXBDAO Xt_jwhxxbDao = DAOFactory.createXT_JWHXXBDAO();
          lstXtjwh = super.findAllByHQL(strBufHql.toString());
          if (lstXtjwh != null && !lstXtjwh.isEmpty()) {
            bFlag = true;
            break;
          }
        }
      }
      if (bFlag) {
        return bFlag;
      }
    }

    catch (ServiceException ex) {
      return false;
    }
    catch (Exception ex) {
      return false;
    }

    return bFlag;
  }
}
