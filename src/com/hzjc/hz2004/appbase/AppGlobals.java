/* Generated by Together */

package com.hzjc.hz2004.appbase;

import com.hzjc.wsstruts.exception.ControlException;
import org.apache.commons.logging.*;

/**
 *
 * <p>Title: Hz2004</p>
 * <p>Description: 常住人口二代证Hz2004版</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: HZJC</p>
 * @author Kansan Ku(kgb_hz@126.com)
 * @version 1.0
 */
public class AppGlobals {
  //日志处理

  protected static Log _log = LogFactory.getLog(AppGlobals.class);
  private static AppGlobals _app = null;

  /**
   * 保护构造子
   */
  protected AppGlobals() {
  }

  /**
   * 得到应用系统全局配置单例
   * ?多线程在此是否有影响???
   * @return
   */
  public static synchronized AppGlobals getInstance() {
    //public static AppGlobals getInstance() {
    //Lazy Create
    if (_app == null) {
      _app = new AppGlobals();
    }
    return _app;
  }

  /**
   * 初始化应用系统Hz2004的所有参数和代码、控制代码集合
   * @throws ControlException
   */
  public void initialSys() throws ControlException {
    try {
      SysConfig.loadAllConfig();
      SysParam.loadAllParamCode();
    }
    catch (ControlException ex) {
      throw ex;
    }
  }

  /**
   * 重新加载所有系统数据字典
   * @throws ControlException
   */
  public void reloadXtSjzd() throws ControlException {
    try {
      SysParam.loadXt_sjzdb();
    }
    catch (ControlException ex) {
      throw ex;
    }
  }

  /**
   * 重新加载所有系统参数、控制参数等
   * @throws ControlException
   */
  public void reloadAllParamCode() throws ControlException {
    try {
      SysParam.loadAllParamCode();
    }
    catch (ControlException ex) {
      throw ex;
    }
  }

  /**
   * 重新加在载所有系统控制参数
   * @throws ControlException
   */
  public void reloadXtkzcs() throws ControlException {
    try {
      SysParam.loadXt_xtkzcsb();
    }
    catch (ControlException ex) {
      throw ex;
    }
  }

  /**
   * 重新加载所有系统参数
   * @throws ControlException
   */
  public void reloadXtcs() throws ControlException {
    try {
      SysParam.loadXt_xtcsb();
    }
    catch (ControlException ex) {
      throw ex;
    }
  }

}
